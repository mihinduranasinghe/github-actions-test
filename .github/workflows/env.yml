name: ENV Variables

on: [push]
env:
  PublicENV1: Available to all jobs
  ENCRIPTED_ENV: ${{ secrets.ENCRIPTED_ENV }}

jobs:
  log-env-job-1:
    runs-on: ubuntu-latest
    env:
      JOB_ENV: Private to the specific log-env-job-1 job
    steps:
      - name: Log Env Variables
        env:
          step_ENV: Available only to the Log Env Variable step
        run: |
          echo "Hello"
          echo "${PublicENV1}"
          echo "${ENCRIPTED_ENV}"
          echo "JOB_ENV": ${JOB_ENV}
          echo "step_ENV": ${step_ENV}

      - name: Log env 2
        run: |
          echo "PublicENV1: ${PublicENV1}"
          echo "JOB_ENV": ${JOB_ENV}
          echo "step_ENV": ${step_ENV}

  log-env-job-2:
    runs-on: ubuntu-latest
    steps:
      - name: Log Default Environments
        run: |
          echo "Home: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "PublicENV1: ${PublicENV1}"
          echo "JOB_ENV: ${JOB_ENV}"
          echo "step_ENV: ${step_ENV}"

  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v2
        with:
          repo-token: ${{secrets.GITHUB_TOKEN}}
          # GITHUB_TOKEN is a default environment variable which can be used give access to third party actions...

  creatue-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }'

      # run curl commands in github actions
      # also you can install 3rd party tools in VM (this is the challenge)

      - name: Push a random number from VM to repo
        run: |
          pwd
          ls -a
          git init
          git remote add origin "https://$GITHUB_ACTOR:${{secrets.GITHUB_TOKEN}}@github.com/$GITHUB_REPOSITORY.git"
          git config --global user.email "my-bot@bot.com"
          git config --global user.name "my-bot"
          git fetch 
          git checkout main
          git branch --set-upstream-to=origin/main
          git pull 
          ls -a 
          echo $RANDOM >> random.txt
          ls -a 
          git add . 
          git commit -m "Random File Added"
          git push
